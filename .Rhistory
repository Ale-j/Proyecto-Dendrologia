getwd()
setwd("D:/Proyecto-Dendrologia")
library(tidyverse)
names(data)
data<- read.csv("MarkerData.csv")
names(data)
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng= -75.57582,
lat= 6.261033, popup= "Podocarpaceae")
m
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "familia",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(datos %>% filter(familia == input$familia))
output$coor<- renderLeaflet({
sel()
})}
shinyApp(ui = ui, server= server)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "familia",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(familia == input$familia))
output$coor<- renderLeaflet({
sel()
})}
shinyApp(ui = ui, server= server)
library(shiny)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "familia",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(familia == input$familia))
output$coor<- renderLeaflet({
sel()
})}
shinyApp(ui = ui, server= server)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(familia == input$Notes))
output$coor<- renderLeaflet({
sel()
})}
shinyApp(ui = ui, server= server)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(Notes == input$Notes))
output$coor<- renderLeaflet({
sel()
})}
shinyApp(ui = ui, server= server)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(Notes == input$Notes))
output$coor<- renderLeaflet({
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng= sel$Longitude(),
lat= Sel$Latitude(), popup= sel$Note())
})}
shinyApp(ui = ui, server= server)
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(Notes == input$Notes))
output$coor<- renderLeaflet({
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng= sel$Longitude(),
lat= Sel$Latitude(), popup= sel$Note())
m
})}
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(Notes == input$Notes))
output$coor<- renderLeaflet({
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng= sel$Longitude(),
lat= Sel$Latitude(), popup= sel$Note())
m
})}
data<- read.csv("MarkerData.csv")
data<- data %>% select(Notes, Latitude, Longitude) %>%
filter(Notes != "null")
library(leaflet)
library(sf)
ui<- fluidPage(
selectInput(inputId = "Notes",
label = strong("Seleccione una familia:"),
choices = unique(data$Notes),
selected = "zamia"),
leafletOutput(outputId = "coor"))
server<- function(input, output) {
sel<- reactive(data %>% filter(Notes == input$Notes))
output$coor<- renderLeaflet({
leaflet() %>%
addTiles() %>%
addMarkers(lng= sel$Longitude(),
lat= Sel$Latitude(), popup= sel$Note())
})}
shinyApp(ui = ui, server= server)
